
test8.o:     file format elf64-x86-64

SYMBOL TABLE:
0000000000000000 l    d  .text	0000000000000000 .text
0000000000000000 l    d  .data	0000000000000000 .data
0000000000000000 l    d  .bss	0000000000000000 .bss
0000000000000000 l       .data	0000000000000000 str_0
0000000000000008 l       .data	0000000000000000 str_1
0000000000000000 l       .text	0000000000000000 lbl_fun_myFunc
00000000000000a2 l       .text	0000000000000000 lbl_0
00000000000000a8 l       .text	0000000000000000 lbl_fun_toInt
00000000000000d3 l       .text	0000000000000000 lbl_2
00000000000000dd l       .text	0000000000000000 lbl_1
000000000000017b l       .text	0000000000000000 lbl_4
0000000000000189 l       .text	0000000000000000 lbl_5
000000000000019e l       .text	0000000000000000 lbl_3
00000000000000e3 g       .text	0000000000000000 main
0000000000000000         *UND*	0000000000000000 printString



Disassembly of section .text:

0000000000000000 <lbl_fun_myFunc>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 c5 10          	add    $0x10,%rbp
   8:	48 83 ec 70          	sub    $0x70,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  14:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  18:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  1c:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
  20:	4c 89 4d c0          	mov    %r9,-0x40(%rbp)
  24:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  28:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
  2c:	48 01 d8             	add    %rbx,%rax
  2f:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  33:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  37:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
  3b:	48 01 d8             	add    %rbx,%rax
  3e:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  42:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  46:	48 8b 5d d0          	mov    -0x30(%rbp),%rbx
  4a:	48 01 d8             	add    %rbx,%rax
  4d:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  51:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  55:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
  59:	48 01 d8             	add    %rbx,%rax
  5c:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  60:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  64:	48 8b 5d c0          	mov    -0x40(%rbp),%rbx
  68:	48 01 d8             	add    %rbx,%rax
  6b:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  6f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  73:	48 8b 5d 10          	mov    0x10(%rbp),%rbx
  77:	48 01 d8             	add    %rbx,%rax
  7a:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  7e:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  82:	48 8b 5d 08          	mov    0x8(%rbp),%rbx
  86:	48 01 d8             	add    %rbx,%rax
  89:	48 89 45 88          	mov    %rax,-0x78(%rbp)
  8d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  91:	48 8b 5d 00          	mov    0x0(%rbp),%rbx
  95:	48 01 d8             	add    %rbx,%rax
  98:	48 89 45 80          	mov    %rax,-0x80(%rbp)
  9c:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  a0:	eb 00                	jmp    a2 <lbl_0>

00000000000000a2 <lbl_0>:
  a2:	48 83 c4 70          	add    $0x70,%rsp
  a6:	5d                   	pop    %rbp
  a7:	c3                   	retq   

00000000000000a8 <lbl_fun_toInt>:
  a8:	55                   	push   %rbp
  a9:	48 89 e5             	mov    %rsp,%rbp
  ac:	48 83 c5 10          	add    $0x10,%rbp
  b0:	48 83 ec 08          	sub    $0x8,%rsp
  b4:	40 88 7d e8          	mov    %dil,-0x18(%rbp)
  b8:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
  bf:	48 0f b6 45 e8       	movzbq -0x18(%rbp),%rax
  c4:	48 83 f8 00          	cmp    $0x0,%rax
  c8:	74 09                	je     d3 <lbl_2>
  ca:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  d1:	eb 0a                	jmp    dd <lbl_1>

00000000000000d3 <lbl_2>:
  d3:	90                   	nop
  d4:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
  db:	eb 00                	jmp    dd <lbl_1>

00000000000000dd <lbl_1>:
  dd:	48 83 c4 08          	add    $0x8,%rsp
  e1:	5d                   	pop    %rbp
  e2:	c3                   	retq   

00000000000000e3 <main>:
  e3:	55                   	push   %rbp
  e4:	48 89 e5             	mov    %rsp,%rbp
  e7:	48 83 c5 10          	add    $0x10,%rbp
  eb:	48 83 ec 20          	sub    $0x20,%rsp
  ef:	48 c7 c7 01 00 00 00 	mov    $0x1,%rdi
  f6:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
  fd:	48 c7 c2 01 00 00 00 	mov    $0x1,%rdx
 104:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
 10b:	49 c7 c0 01 00 00 00 	mov    $0x1,%r8
 112:	49 c7 c1 01 00 00 00 	mov    $0x1,%r9
 119:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
 120:	50                   	push   %rax
 121:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
 128:	50                   	push   %rax
 129:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
 130:	50                   	push   %rax
 131:	e8 ca fe ff ff       	callq  0 <lbl_fun_myFunc>
 136:	48 83 c4 18          	add    $0x18,%rsp
 13a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 13e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 142:	48 c7 c3 09 00 00 00 	mov    $0x9,%rbx
 149:	48 39 d8             	cmp    %rbx,%rax
 14c:	0f 94 c0             	sete   %al
 14f:	88 45 d8             	mov    %al,-0x28(%rbp)
 152:	48 0f b6 45 d8       	movzbq -0x28(%rbp),%rax
 157:	88 45 e8             	mov    %al,-0x18(%rbp)
 15a:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
 161:	48 0f b6 45 e8       	movzbq -0x18(%rbp),%rax
 166:	48 83 f8 00          	cmp    $0x0,%rax
 16a:	74 0f                	je     17b <lbl_4>
 16c:	48 8d 3c 25 00 00 00 00 	lea    0x0,%rdi	170: R_X86_64_32S	.data+0x8
 174:	e8 00 00 00 00       	callq  179 <main+0x96>	175: R_X86_64_PLT32	printString-0x4
 179:	eb 0e                	jmp    189 <lbl_5>

000000000000017b <lbl_4>:
 17b:	90                   	nop
 17c:	48 8d 3c 25 00 00 00 00 	lea    0x0,%rdi	180: R_X86_64_32S	.data
 184:	e8 00 00 00 00       	callq  189 <lbl_5>	185: R_X86_64_PLT32	printString-0x4

0000000000000189 <lbl_5>:
 189:	90                   	nop
 18a:	48 0f b6 7d e8       	movzbq -0x18(%rbp),%rdi
 18f:	e8 14 ff ff ff       	callq  a8 <lbl_fun_toInt>
 194:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 198:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 19c:	eb 00                	jmp    19e <lbl_3>

000000000000019e <lbl_3>:
 19e:	48 83 c4 20          	add    $0x20,%rsp
 1a2:	5d                   	pop    %rbp
 1a3:	c3                   	retq   

Disassembly of section .data:

0000000000000000 <str_0>:
   0:	66 61                	data16 (bad) 
   2:	6c                   	insb   (%dx),%es:(%rdi)
   3:	73 65                	jae    6a <str_1+0x62>
   5:	00 00                	add    %al,(%rax)
	...

0000000000000008 <str_1>:
   8:	74 72                	je     7c <str_1+0x74>
   a:	75 65                	jne    71 <str_1+0x69>
   c:	00 00                	add    %al,(%rax)
	...
