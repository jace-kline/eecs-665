
test7.o:     file format elf64-x86-64

SYMBOL TABLE:
0000000000000000 l    d  .text	0000000000000000 .text
0000000000000000 l    d  .data	0000000000000000 .data
0000000000000000 l    d  .bss	0000000000000000 .bss
0000000000000000 l       .text	0000000000000000 lbl_fun_fib
0000000000000042 l       .text	0000000000000000 lbl_1
00000000000000c6 l       .text	0000000000000000 lbl_0
0000000000000072 l       .text	0000000000000000 lbl_2
00000000000000ff l       .text	0000000000000000 lbl_3
00000000000000cc g       .text	0000000000000000 main
0000000000000000         *UND*	0000000000000000 printInt



Disassembly of section .text:

0000000000000000 <lbl_fun_fib>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 c5 10          	add    $0x10,%rbp
   8:	48 83 ec 40          	sub    $0x40,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  14:	48 c7 c3 00 00 00 00 	mov    $0x0,%rbx
  1b:	48 39 d8             	cmp    %rbx,%rax
  1e:	0f 94 c0             	sete   %al
  21:	88 45 e0             	mov    %al,-0x20(%rbp)
  24:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
  2b:	48 0f b6 45 e0       	movzbq -0x20(%rbp),%rax
  30:	48 83 f8 00          	cmp    $0x0,%rax
  34:	74 0c                	je     42 <lbl_1>
  36:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
  3d:	e9 84 00 00 00       	jmpq   c6 <lbl_0>

0000000000000042 <lbl_1>:
  42:	90                   	nop
  43:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  47:	48 c7 c3 01 00 00 00 	mov    $0x1,%rbx
  4e:	48 39 d8             	cmp    %rbx,%rax
  51:	0f 94 c0             	sete   %al
  54:	88 45 d8             	mov    %al,-0x28(%rbp)
  57:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
  5e:	48 0f b6 45 d8       	movzbq -0x28(%rbp),%rax
  63:	48 83 f8 00          	cmp    $0x0,%rax
  67:	74 09                	je     72 <lbl_2>
  69:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  70:	eb 54                	jmp    c6 <lbl_0>

0000000000000072 <lbl_2>:
  72:	90                   	nop
  73:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  77:	48 c7 c3 01 00 00 00 	mov    $0x1,%rbx
  7e:	48 29 d8             	sub    %rbx,%rax
  81:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  85:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  89:	e8 72 ff ff ff       	callq  0 <lbl_fun_fib>
  8e:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  92:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  96:	48 c7 c3 02 00 00 00 	mov    $0x2,%rbx
  9d:	48 29 d8             	sub    %rbx,%rax
  a0:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  a4:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  a8:	e8 53 ff ff ff       	callq  0 <lbl_fun_fib>
  ad:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  b1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  b5:	48 8b 5d b8          	mov    -0x48(%rbp),%rbx
  b9:	48 01 d8             	add    %rbx,%rax
  bc:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  c0:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  c4:	eb 00                	jmp    c6 <lbl_0>

00000000000000c6 <lbl_0>:
  c6:	48 83 c4 40          	add    $0x40,%rsp
  ca:	5d                   	pop    %rbp
  cb:	c3                   	retq   

00000000000000cc <main>:
  cc:	55                   	push   %rbp
  cd:	48 89 e5             	mov    %rsp,%rbp
  d0:	48 83 c5 10          	add    $0x10,%rbp
  d4:	48 83 ec 10          	sub    $0x10,%rsp
  d8:	48 c7 c7 0a 00 00 00 	mov    $0xa,%rdi
  df:	e8 1c ff ff ff       	callq  0 <lbl_fun_fib>
  e4:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  e8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  ec:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  f0:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  f4:	e8 00 00 00 00       	callq  f9 <main+0x2d>	f5: R_X86_64_PLT32	printInt-0x4
  f9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  fd:	eb 00                	jmp    ff <lbl_3>

00000000000000ff <lbl_3>:
  ff:	48 83 c4 10          	add    $0x10,%rsp
 103:	5d                   	pop    %rbp
 104:	c3                   	retq   
