
test3.o:     file format elf64-x86-64

SYMBOL TABLE:
0000000000000000 l    d  .text	0000000000000000 .text
0000000000000000 l    d  .data	0000000000000000 .data
0000000000000000 l    d  .bss	0000000000000000 .bss
0000000000000000 l       .data	0000000000000000 gbl_c
0000000000000001 l       .data	0000000000000000 gbl_b
000000000000004d l       .text	0000000000000000 lbl_0
0000000000000000 g       .text	0000000000000000 main
0000000000000000         *UND*	0000000000000000 printByte



Disassembly of section .text:

0000000000000000 <main>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 c5 10          	add    $0x10,%rbp
   8:	48 83 ec 00          	sub    $0x0,%rsp
   c:	48 c7 c0 61 00 00 00 	mov    $0x61,%rax
  13:	88 04 25 00 00 00 00 	mov    %al,0x0	16: R_X86_64_32S	.data
  1a:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
  21:	88 04 25 00 00 00 00 	mov    %al,0x0	24: R_X86_64_32S	.data+0x1
  28:	48 0f b6 3c 25 00 00 00 00 	movzbq 0x0,%rdi	2d: R_X86_64_32S	.data
  31:	e8 00 00 00 00       	callq  36 <main+0x36>	32: R_X86_64_PLT32	printByte-0x4
  36:	48 0f b6 3c 25 00 00 00 00 	movzbq 0x0,%rdi	3b: R_X86_64_32S	.data+0x1
  3f:	e8 00 00 00 00       	callq  44 <main+0x44>	40: R_X86_64_PLT32	printByte-0x4
  44:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
  4b:	eb 00                	jmp    4d <lbl_0>

000000000000004d <lbl_0>:
  4d:	48 83 c4 00          	add    $0x0,%rsp
  51:	5d                   	pop    %rbp
  52:	c3                   	retq   

Disassembly of section .data:

0000000000000000 <gbl_c>:
	...

0000000000000001 <gbl_b>:
	...
