Grammar

    0 $accept: program "end file"

    1 program: globals

    2 globals: globals decl
    3        | %empty

    4 decl: varDecl SEMICOLON
    5     | fnDecl

    6 varDecl: type id

    7 type: INT
    8     | INTPTR
    9     | BOOL
   10     | BOOLPTR
   11     | CHAR
   12     | CHARPTR
   13     | VOID

   14 fnDecl: type id formals fnBody

   15 formals: LPAREN RPAREN
   16        | LPAREN formalsList RPAREN

   17 formalsList: formalDecl
   18            | formalDecl COMMA formalsList

   19 formalDecl: type id

   20 fnBody: LCURLY stmtList RCURLY

   21 stmtList: stmtList stmt
   22         | %empty

   23 stmt: varDecl SEMICOLON
   24     | assignExp SEMICOLON
   25     | lval DASHDASH SEMICOLON
   26     | lval CROSSCROSS SEMICOLON
   27     | FROMCONSOLE lval SEMICOLON
   28     | TOCONSOLE exp SEMICOLON
   29     | IF LPAREN exp RPAREN LCURLY stmtList RCURLY
   30     | IF LPAREN exp RPAREN LCURLY stmtList RCURLY ELSE LCURLY stmtList RCURLY
   31     | WHILE LPAREN exp RPAREN LCURLY stmtList RCURLY
   32     | RETURN exp SEMICOLON
   33     | RETURN SEMICOLON
   34     | fncall SEMICOLON

   35 fncall: id LPAREN RPAREN
   36       | id LPAREN actualsList RPAREN

   37 actualsList: exp
   38            | actualsList COMMA exp

   39 exp: NOT exp
   40    | assignExp
   41    | orExp

   42 assignExp: lval ASSIGN exp

   43 orExp: orExp OR andExp
   44      | andExp

   45 andExp: andExp AND cmpExp
   46       | cmpExp

   47 cmpExp: arithExp cmpOp arithExp
   48       | arithExp

   49 arithExp: arithExp arithOp prodExp
   50         | prodExp

   51 prodExp: prodExp prodOp termExp
   52        | termExp

   53 termExp: DASH term
   54        | term

   55 cmpOp: EQUALS
   56      | NOTEQUALS
   57      | GREATER
   58      | GREATEREQ
   59      | LESS
   60      | LESSEQ

   61 arithOp: CROSS
   62        | DASH

   63 prodOp: STAR
   64       | SLASH

   65 term: lval
   66     | INTLITERAL
   67     | STRLITERAL
   68     | CHARLIT
   69     | TRUE
   70     | FALSE
   71     | NULLPTR
   72     | LPAREN exp RPAREN
   73     | fncall

   74 lval: id
   75     | id LBRACE exp RBRACE
   76     | AT id
   77     | CARAT id

   78 id: ID


Terminals, with rules where they appear

    "end file" (0) 0
    error (256)
    AND <transToken> (258) 45
    AT <transToken> (259) 76
    ASSIGN <transToken> (260) 42
    BOOL <transToken> (261) 9
    BOOLPTR <transToken> (262) 10
    CARAT <transToken> (263) 77
    CHAR <transToken> (264) 11
    CHARLIT <transCharToken> (265) 68
    CHARPTR <transToken> (266) 12
    COMMA <transToken> (267) 18 38
    CROSS <transToken> (268) 61
    CROSSCROSS <transToken> (269) 26
    DASH <transToken> (270) 53 62
    DASHDASH <transToken> (271) 25
    ELSE <transToken> (272) 30
    EQUALS <transToken> (273) 55
    FALSE <transToken> (274) 70
    FROMCONSOLE <transToken> (275) 27
    ID <transIDToken> (276) 78
    IF <transToken> (277) 29 30
    INT <transToken> (278) 7
    INTLITERAL <transIntToken> (279) 66
    INTPTR <transToken> (280) 8
    GREATER <transToken> (281) 57
    GREATEREQ <transToken> (282) 58
    LBRACE <transToken> (283) 75
    LCURLY <transToken> (284) 20 29 30 31
    LESS <transToken> (285) 59
    LESSEQ <transToken> (286) 60
    LPAREN <transToken> (287) 15 16 29 30 31 35 36 72
    NOT <transToken> (288) 39
    NOTEQUALS <transToken> (289) 56
    NULLPTR <transToken> (290) 71
    OR <transToken> (291) 43
    RBRACE <transToken> (292) 75
    RCURLY <transToken> (293) 20 29 30 31
    RETURN <transToken> (294) 32 33
    RPAREN <transToken> (295) 15 16 29 30 31 35 36 72
    SEMICOLON <transToken> (296) 4 23 24 25 26 27 28 32 33 34
    SLASH <transToken> (297) 64
    STAR <transToken> (298) 63
    STRLITERAL <transStrToken> (299) 67
    TOCONSOLE <transToken> (300) 28
    TRUE <transToken> (301) 69
    VOID <transToken> (302) 13
    WHILE <transToken> (303) 31


Nonterminals, with rules where they appear

    $accept (49)
        on left: 0
    program (50)
        on left: 1
        on right: 0
    globals (51)
        on left: 2 3
        on right: 1 2
    decl (52)
        on left: 4 5
        on right: 2
    varDecl (53)
        on left: 6
        on right: 4 23
    type (54)
        on left: 7 8 9 10 11 12 13
        on right: 6 14 19
    fnDecl (55)
        on left: 14
        on right: 5
    formals (56)
        on left: 15 16
        on right: 14
    formalsList (57)
        on left: 17 18
        on right: 16 18
    formalDecl (58)
        on left: 19
        on right: 17 18
    fnBody (59)
        on left: 20
        on right: 14
    stmtList (60)
        on left: 21 22
        on right: 20 21 29 30 31
    stmt (61)
        on left: 23 24 25 26 27 28 29 30 31 32 33 34
        on right: 21
    fncall (62)
        on left: 35 36
        on right: 34 73
    actualsList (63)
        on left: 37 38
        on right: 36 38
    exp (64)
        on left: 39 40 41
        on right: 28 29 30 31 32 37 38 39 42 72 75
    assignExp (65)
        on left: 42
        on right: 24 40
    orExp (66)
        on left: 43 44
        on right: 41 43
    andExp (67)
        on left: 45 46
        on right: 43 44 45
    cmpExp (68)
        on left: 47 48
        on right: 45 46
    arithExp (69)
        on left: 49 50
        on right: 47 48 49
    prodExp (70)
        on left: 51 52
        on right: 49 50 51
    termExp (71)
        on left: 53 54
        on right: 51 52
    cmpOp (72)
        on left: 55 56 57 58 59 60
        on right: 47
    arithOp (73)
        on left: 61 62
        on right: 49
    prodOp (74)
        on left: 63 64
        on right: 51
    term (75)
        on left: 65 66 67 68 69 70 71 72 73
        on right: 53 54
    lval (76)
        on left: 74 75 76 77
        on right: 25 26 27 42 65
    id (77)
        on left: 78
        on right: 6 14 19 35 36 74 75 76 77


State 0

    0 $accept: . program "end file"

    $default  reduce using rule 3 (globals)

    program  go to state 1
    globals  go to state 2


State 1

    0 $accept: program . "end file"

    "end file"  shift, and go to state 3


State 2

    1 program: globals .
    2 globals: globals . decl

    BOOL     shift, and go to state 4
    BOOLPTR  shift, and go to state 5
    CHAR     shift, and go to state 6
    CHARPTR  shift, and go to state 7
    INT      shift, and go to state 8
    INTPTR   shift, and go to state 9
    VOID     shift, and go to state 10

    $default  reduce using rule 1 (program)

    decl     go to state 11
    varDecl  go to state 12
    type     go to state 13
    fnDecl   go to state 14


State 3

    0 $accept: program "end file" .

    $default  accept


State 4

    9 type: BOOL .

    $default  reduce using rule 9 (type)


State 5

   10 type: BOOLPTR .

    $default  reduce using rule 10 (type)


State 6

   11 type: CHAR .

    $default  reduce using rule 11 (type)


State 7

   12 type: CHARPTR .

    $default  reduce using rule 12 (type)


State 8

    7 type: INT .

    $default  reduce using rule 7 (type)


State 9

    8 type: INTPTR .

    $default  reduce using rule 8 (type)


State 10

   13 type: VOID .

    $default  reduce using rule 13 (type)


State 11

    2 globals: globals decl .

    $default  reduce using rule 2 (globals)


State 12

    4 decl: varDecl . SEMICOLON

    SEMICOLON  shift, and go to state 15


State 13

    6 varDecl: type . id
   14 fnDecl: type . id formals fnBody

    ID  shift, and go to state 16

    id  go to state 17


State 14

    5 decl: fnDecl .

    $default  reduce using rule 5 (decl)


State 15

    4 decl: varDecl SEMICOLON .

    $default  reduce using rule 4 (decl)


State 16

   78 id: ID .

    $default  reduce using rule 78 (id)


State 17

    6 varDecl: type id .
   14 fnDecl: type id . formals fnBody

    LPAREN  shift, and go to state 18

    $default  reduce using rule 6 (varDecl)

    formals  go to state 19


State 18

   15 formals: LPAREN . RPAREN
   16        | LPAREN . formalsList RPAREN

    BOOL     shift, and go to state 4
    BOOLPTR  shift, and go to state 5
    CHAR     shift, and go to state 6
    CHARPTR  shift, and go to state 7
    INT      shift, and go to state 8
    INTPTR   shift, and go to state 9
    RPAREN   shift, and go to state 20
    VOID     shift, and go to state 10

    type         go to state 21
    formalsList  go to state 22
    formalDecl   go to state 23


State 19

   14 fnDecl: type id formals . fnBody

    LCURLY  shift, and go to state 24

    fnBody  go to state 25


State 20

   15 formals: LPAREN RPAREN .

    $default  reduce using rule 15 (formals)


State 21

   19 formalDecl: type . id

    ID  shift, and go to state 16

    id  go to state 26


State 22

   16 formals: LPAREN formalsList . RPAREN

    RPAREN  shift, and go to state 27


State 23

   17 formalsList: formalDecl .
   18            | formalDecl . COMMA formalsList

    COMMA  shift, and go to state 28

    $default  reduce using rule 17 (formalsList)


State 24

   20 fnBody: LCURLY . stmtList RCURLY

    $default  reduce using rule 22 (stmtList)

    stmtList  go to state 29


State 25

   14 fnDecl: type id formals fnBody .

    $default  reduce using rule 14 (fnDecl)


State 26

   19 formalDecl: type id .

    $default  reduce using rule 19 (formalDecl)


State 27

   16 formals: LPAREN formalsList RPAREN .

    $default  reduce using rule 16 (formals)


State 28

   18 formalsList: formalDecl COMMA . formalsList

    BOOL     shift, and go to state 4
    BOOLPTR  shift, and go to state 5
    CHAR     shift, and go to state 6
    CHARPTR  shift, and go to state 7
    INT      shift, and go to state 8
    INTPTR   shift, and go to state 9
    VOID     shift, and go to state 10

    type         go to state 21
    formalsList  go to state 30
    formalDecl   go to state 23


State 29

   20 fnBody: LCURLY stmtList . RCURLY
   21 stmtList: stmtList . stmt

    AT           shift, and go to state 31
    BOOL         shift, and go to state 4
    BOOLPTR      shift, and go to state 5
    CARAT        shift, and go to state 32
    CHAR         shift, and go to state 6
    CHARPTR      shift, and go to state 7
    FROMCONSOLE  shift, and go to state 33
    ID           shift, and go to state 16
    IF           shift, and go to state 34
    INT          shift, and go to state 8
    INTPTR       shift, and go to state 9
    RCURLY       shift, and go to state 35
    RETURN       shift, and go to state 36
    TOCONSOLE    shift, and go to state 37
    VOID         shift, and go to state 10
    WHILE        shift, and go to state 38

    varDecl    go to state 39
    type       go to state 40
    stmt       go to state 41
    fncall     go to state 42
    assignExp  go to state 43
    lval       go to state 44
    id         go to state 45


State 30

   18 formalsList: formalDecl COMMA formalsList .

    $default  reduce using rule 18 (formalsList)


State 31

   76 lval: AT . id

    ID  shift, and go to state 16

    id  go to state 46


State 32

   77 lval: CARAT . id

    ID  shift, and go to state 16

    id  go to state 47


State 33

   27 stmt: FROMCONSOLE . lval SEMICOLON

    AT     shift, and go to state 31
    CARAT  shift, and go to state 32
    ID     shift, and go to state 16

    lval  go to state 48
    id    go to state 49


State 34

   29 stmt: IF . LPAREN exp RPAREN LCURLY stmtList RCURLY
   30     | IF . LPAREN exp RPAREN LCURLY stmtList RCURLY ELSE LCURLY stmtList RCURLY

    LPAREN  shift, and go to state 50


State 35

   20 fnBody: LCURLY stmtList RCURLY .

    $default  reduce using rule 20 (fnBody)


State 36

   32 stmt: RETURN . exp SEMICOLON
   33     | RETURN . SEMICOLON

    AT          shift, and go to state 31
    CARAT       shift, and go to state 32
    CHARLIT     shift, and go to state 51
    DASH        shift, and go to state 52
    FALSE       shift, and go to state 53
    ID          shift, and go to state 16
    INTLITERAL  shift, and go to state 54
    LPAREN      shift, and go to state 55
    NOT         shift, and go to state 56
    NULLPTR     shift, and go to state 57
    SEMICOLON   shift, and go to state 58
    STRLITERAL  shift, and go to state 59
    TRUE        shift, and go to state 60

    fncall     go to state 61
    exp        go to state 62
    assignExp  go to state 63
    orExp      go to state 64
    andExp     go to state 65
    cmpExp     go to state 66
    arithExp   go to state 67
    prodExp    go to state 68
    termExp    go to state 69
    term       go to state 70
    lval       go to state 71
    id         go to state 45


State 37

   28 stmt: TOCONSOLE . exp SEMICOLON

    AT          shift, and go to state 31
    CARAT       shift, and go to state 32
    CHARLIT     shift, and go to state 51
    DASH        shift, and go to state 52
    FALSE       shift, and go to state 53
    ID          shift, and go to state 16
    INTLITERAL  shift, and go to state 54
    LPAREN      shift, and go to state 55
    NOT         shift, and go to state 56
    NULLPTR     shift, and go to state 57
    STRLITERAL  shift, and go to state 59
    TRUE        shift, and go to state 60

    fncall     go to state 61
    exp        go to state 72
    assignExp  go to state 63
    orExp      go to state 64
    andExp     go to state 65
    cmpExp     go to state 66
    arithExp   go to state 67
    prodExp    go to state 68
    termExp    go to state 69
    term       go to state 70
    lval       go to state 71
    id         go to state 45


State 38

   31 stmt: WHILE . LPAREN exp RPAREN LCURLY stmtList RCURLY

    LPAREN  shift, and go to state 73


State 39

   23 stmt: varDecl . SEMICOLON

    SEMICOLON  shift, and go to state 74


State 40

    6 varDecl: type . id

    ID  shift, and go to state 16

    id  go to state 75


State 41

   21 stmtList: stmtList stmt .

    $default  reduce using rule 21 (stmtList)


State 42

   34 stmt: fncall . SEMICOLON

    SEMICOLON  shift, and go to state 76


State 43

   24 stmt: assignExp . SEMICOLON

    SEMICOLON  shift, and go to state 77


State 44

   25 stmt: lval . DASHDASH SEMICOLON
   26     | lval . CROSSCROSS SEMICOLON
   42 assignExp: lval . ASSIGN exp

    ASSIGN      shift, and go to state 78
    CROSSCROSS  shift, and go to state 79
    DASHDASH    shift, and go to state 80


State 45

   35 fncall: id . LPAREN RPAREN
   36       | id . LPAREN actualsList RPAREN
   74 lval: id .
   75     | id . LBRACE exp RBRACE

    LBRACE  shift, and go to state 81
    LPAREN  shift, and go to state 82

    $default  reduce using rule 74 (lval)


State 46

   76 lval: AT id .

    $default  reduce using rule 76 (lval)


State 47

   77 lval: CARAT id .

    $default  reduce using rule 77 (lval)


State 48

   27 stmt: FROMCONSOLE lval . SEMICOLON

    SEMICOLON  shift, and go to state 83


State 49

   74 lval: id .
   75     | id . LBRACE exp RBRACE

    LBRACE  shift, and go to state 81

    $default  reduce using rule 74 (lval)


State 50

   29 stmt: IF LPAREN . exp RPAREN LCURLY stmtList RCURLY
   30     | IF LPAREN . exp RPAREN LCURLY stmtList RCURLY ELSE LCURLY stmtList RCURLY

    AT          shift, and go to state 31
    CARAT       shift, and go to state 32
    CHARLIT     shift, and go to state 51
    DASH        shift, and go to state 52
    FALSE       shift, and go to state 53
    ID          shift, and go to state 16
    INTLITERAL  shift, and go to state 54
    LPAREN      shift, and go to state 55
    NOT         shift, and go to state 56
    NULLPTR     shift, and go to state 57
    STRLITERAL  shift, and go to state 59
    TRUE        shift, and go to state 60

    fncall     go to state 61
    exp        go to state 84
    assignExp  go to state 63
    orExp      go to state 64
    andExp     go to state 65
    cmpExp     go to state 66
    arithExp   go to state 67
    prodExp    go to state 68
    termExp    go to state 69
    term       go to state 70
    lval       go to state 71
    id         go to state 45


State 51

   68 term: CHARLIT .

    $default  reduce using rule 68 (term)


State 52

   53 termExp: DASH . term

    AT          shift, and go to state 31
    CARAT       shift, and go to state 32
    CHARLIT     shift, and go to state 51
    FALSE       shift, and go to state 53
    ID          shift, and go to state 16
    INTLITERAL  shift, and go to state 54
    LPAREN      shift, and go to state 55
    NULLPTR     shift, and go to state 57
    STRLITERAL  shift, and go to state 59
    TRUE        shift, and go to state 60

    fncall  go to state 61
    term    go to state 85
    lval    go to state 86
    id      go to state 45


State 53

   70 term: FALSE .

    $default  reduce using rule 70 (term)


State 54

   66 term: INTLITERAL .

    $default  reduce using rule 66 (term)


State 55

   72 term: LPAREN . exp RPAREN

    AT          shift, and go to state 31
    CARAT       shift, and go to state 32
    CHARLIT     shift, and go to state 51
    DASH        shift, and go to state 52
    FALSE       shift, and go to state 53
    ID          shift, and go to state 16
    INTLITERAL  shift, and go to state 54
    LPAREN      shift, and go to state 55
    NOT         shift, and go to state 56
    NULLPTR     shift, and go to state 57
    STRLITERAL  shift, and go to state 59
    TRUE        shift, and go to state 60

    fncall     go to state 61
    exp        go to state 87
    assignExp  go to state 63
    orExp      go to state 64
    andExp     go to state 65
    cmpExp     go to state 66
    arithExp   go to state 67
    prodExp    go to state 68
    termExp    go to state 69
    term       go to state 70
    lval       go to state 71
    id         go to state 45


State 56

   39 exp: NOT . exp

    AT          shift, and go to state 31
    CARAT       shift, and go to state 32
    CHARLIT     shift, and go to state 51
    DASH        shift, and go to state 52
    FALSE       shift, and go to state 53
    ID          shift, and go to state 16
    INTLITERAL  shift, and go to state 54
    LPAREN      shift, and go to state 55
    NOT         shift, and go to state 56
    NULLPTR     shift, and go to state 57
    STRLITERAL  shift, and go to state 59
    TRUE        shift, and go to state 60

    fncall     go to state 61
    exp        go to state 88
    assignExp  go to state 63
    orExp      go to state 64
    andExp     go to state 65
    cmpExp     go to state 66
    arithExp   go to state 67
    prodExp    go to state 68
    termExp    go to state 69
    term       go to state 70
    lval       go to state 71
    id         go to state 45


State 57

   71 term: NULLPTR .

    $default  reduce using rule 71 (term)


State 58

   33 stmt: RETURN SEMICOLON .

    $default  reduce using rule 33 (stmt)


State 59

   67 term: STRLITERAL .

    $default  reduce using rule 67 (term)


State 60

   69 term: TRUE .

    $default  reduce using rule 69 (term)


State 61

   73 term: fncall .

    $default  reduce using rule 73 (term)


State 62

   32 stmt: RETURN exp . SEMICOLON

    SEMICOLON  shift, and go to state 89


State 63

   40 exp: assignExp .

    $default  reduce using rule 40 (exp)


State 64

   41 exp: orExp .
   43 orExp: orExp . OR andExp

    OR  shift, and go to state 90

    $default  reduce using rule 41 (exp)


State 65

   44 orExp: andExp .
   45 andExp: andExp . AND cmpExp

    AND  shift, and go to state 91

    $default  reduce using rule 44 (orExp)


State 66

   46 andExp: cmpExp .

    $default  reduce using rule 46 (andExp)


State 67

   47 cmpExp: arithExp . cmpOp arithExp
   48       | arithExp .
   49 arithExp: arithExp . arithOp prodExp

    CROSS      shift, and go to state 92
    DASH       shift, and go to state 93
    EQUALS     shift, and go to state 94
    GREATER    shift, and go to state 95
    GREATEREQ  shift, and go to state 96
    LESS       shift, and go to state 97
    LESSEQ     shift, and go to state 98
    NOTEQUALS  shift, and go to state 99

    $default  reduce using rule 48 (cmpExp)

    cmpOp    go to state 100
    arithOp  go to state 101


State 68

   50 arithExp: prodExp .
   51 prodExp: prodExp . prodOp termExp

    SLASH  shift, and go to state 102
    STAR   shift, and go to state 103

    $default  reduce using rule 50 (arithExp)

    prodOp  go to state 104


State 69

   52 prodExp: termExp .

    $default  reduce using rule 52 (prodExp)


State 70

   54 termExp: term .

    $default  reduce using rule 54 (termExp)


State 71

   42 assignExp: lval . ASSIGN exp
   65 term: lval .

    ASSIGN  shift, and go to state 78

    $default  reduce using rule 65 (term)


State 72

   28 stmt: TOCONSOLE exp . SEMICOLON

    SEMICOLON  shift, and go to state 105


State 73

   31 stmt: WHILE LPAREN . exp RPAREN LCURLY stmtList RCURLY

    AT          shift, and go to state 31
    CARAT       shift, and go to state 32
    CHARLIT     shift, and go to state 51
    DASH        shift, and go to state 52
    FALSE       shift, and go to state 53
    ID          shift, and go to state 16
    INTLITERAL  shift, and go to state 54
    LPAREN      shift, and go to state 55
    NOT         shift, and go to state 56
    NULLPTR     shift, and go to state 57
    STRLITERAL  shift, and go to state 59
    TRUE        shift, and go to state 60

    fncall     go to state 61
    exp        go to state 106
    assignExp  go to state 63
    orExp      go to state 64
    andExp     go to state 65
    cmpExp     go to state 66
    arithExp   go to state 67
    prodExp    go to state 68
    termExp    go to state 69
    term       go to state 70
    lval       go to state 71
    id         go to state 45


State 74

   23 stmt: varDecl SEMICOLON .

    $default  reduce using rule 23 (stmt)


State 75

    6 varDecl: type id .

    $default  reduce using rule 6 (varDecl)


State 76

   34 stmt: fncall SEMICOLON .

    $default  reduce using rule 34 (stmt)


State 77

   24 stmt: assignExp SEMICOLON .

    $default  reduce using rule 24 (stmt)


State 78

   42 assignExp: lval ASSIGN . exp

    AT          shift, and go to state 31
    CARAT       shift, and go to state 32
    CHARLIT     shift, and go to state 51
    DASH        shift, and go to state 52
    FALSE       shift, and go to state 53
    ID          shift, and go to state 16
    INTLITERAL  shift, and go to state 54
    LPAREN      shift, and go to state 55
    NOT         shift, and go to state 56
    NULLPTR     shift, and go to state 57
    STRLITERAL  shift, and go to state 59
    TRUE        shift, and go to state 60

    fncall     go to state 61
    exp        go to state 107
    assignExp  go to state 63
    orExp      go to state 64
    andExp     go to state 65
    cmpExp     go to state 66
    arithExp   go to state 67
    prodExp    go to state 68
    termExp    go to state 69
    term       go to state 70
    lval       go to state 71
    id         go to state 45


State 79

   26 stmt: lval CROSSCROSS . SEMICOLON

    SEMICOLON  shift, and go to state 108


State 80

   25 stmt: lval DASHDASH . SEMICOLON

    SEMICOLON  shift, and go to state 109


State 81

   75 lval: id LBRACE . exp RBRACE

    AT          shift, and go to state 31
    CARAT       shift, and go to state 32
    CHARLIT     shift, and go to state 51
    DASH        shift, and go to state 52
    FALSE       shift, and go to state 53
    ID          shift, and go to state 16
    INTLITERAL  shift, and go to state 54
    LPAREN      shift, and go to state 55
    NOT         shift, and go to state 56
    NULLPTR     shift, and go to state 57
    STRLITERAL  shift, and go to state 59
    TRUE        shift, and go to state 60

    fncall     go to state 61
    exp        go to state 110
    assignExp  go to state 63
    orExp      go to state 64
    andExp     go to state 65
    cmpExp     go to state 66
    arithExp   go to state 67
    prodExp    go to state 68
    termExp    go to state 69
    term       go to state 70
    lval       go to state 71
    id         go to state 45


State 82

   35 fncall: id LPAREN . RPAREN
   36       | id LPAREN . actualsList RPAREN

    AT          shift, and go to state 31
    CARAT       shift, and go to state 32
    CHARLIT     shift, and go to state 51
    DASH        shift, and go to state 52
    FALSE       shift, and go to state 53
    ID          shift, and go to state 16
    INTLITERAL  shift, and go to state 54
    LPAREN      shift, and go to state 55
    NOT         shift, and go to state 56
    NULLPTR     shift, and go to state 57
    RPAREN      shift, and go to state 111
    STRLITERAL  shift, and go to state 59
    TRUE        shift, and go to state 60

    fncall       go to state 61
    actualsList  go to state 112
    exp          go to state 113
    assignExp    go to state 63
    orExp        go to state 64
    andExp       go to state 65
    cmpExp       go to state 66
    arithExp     go to state 67
    prodExp      go to state 68
    termExp      go to state 69
    term         go to state 70
    lval         go to state 71
    id           go to state 45


State 83

   27 stmt: FROMCONSOLE lval SEMICOLON .

    $default  reduce using rule 27 (stmt)


State 84

   29 stmt: IF LPAREN exp . RPAREN LCURLY stmtList RCURLY
   30     | IF LPAREN exp . RPAREN LCURLY stmtList RCURLY ELSE LCURLY stmtList RCURLY

    RPAREN  shift, and go to state 114


State 85

   53 termExp: DASH term .

    $default  reduce using rule 53 (termExp)


State 86

   65 term: lval .

    $default  reduce using rule 65 (term)


State 87

   72 term: LPAREN exp . RPAREN

    RPAREN  shift, and go to state 115


State 88

   39 exp: NOT exp .

    $default  reduce using rule 39 (exp)


State 89

   32 stmt: RETURN exp SEMICOLON .

    $default  reduce using rule 32 (stmt)


State 90

   43 orExp: orExp OR . andExp

    AT          shift, and go to state 31
    CARAT       shift, and go to state 32
    CHARLIT     shift, and go to state 51
    DASH        shift, and go to state 52
    FALSE       shift, and go to state 53
    ID          shift, and go to state 16
    INTLITERAL  shift, and go to state 54
    LPAREN      shift, and go to state 55
    NULLPTR     shift, and go to state 57
    STRLITERAL  shift, and go to state 59
    TRUE        shift, and go to state 60

    fncall    go to state 61
    andExp    go to state 116
    cmpExp    go to state 66
    arithExp  go to state 67
    prodExp   go to state 68
    termExp   go to state 69
    term      go to state 70
    lval      go to state 86
    id        go to state 45


State 91

   45 andExp: andExp AND . cmpExp

    AT          shift, and go to state 31
    CARAT       shift, and go to state 32
    CHARLIT     shift, and go to state 51
    DASH        shift, and go to state 52
    FALSE       shift, and go to state 53
    ID          shift, and go to state 16
    INTLITERAL  shift, and go to state 54
    LPAREN      shift, and go to state 55
    NULLPTR     shift, and go to state 57
    STRLITERAL  shift, and go to state 59
    TRUE        shift, and go to state 60

    fncall    go to state 61
    cmpExp    go to state 117
    arithExp  go to state 67
    prodExp   go to state 68
    termExp   go to state 69
    term      go to state 70
    lval      go to state 86
    id        go to state 45


State 92

   61 arithOp: CROSS .

    $default  reduce using rule 61 (arithOp)


State 93

   62 arithOp: DASH .

    $default  reduce using rule 62 (arithOp)


State 94

   55 cmpOp: EQUALS .

    $default  reduce using rule 55 (cmpOp)


State 95

   57 cmpOp: GREATER .

    $default  reduce using rule 57 (cmpOp)


State 96

   58 cmpOp: GREATEREQ .

    $default  reduce using rule 58 (cmpOp)


State 97

   59 cmpOp: LESS .

    $default  reduce using rule 59 (cmpOp)


State 98

   60 cmpOp: LESSEQ .

    $default  reduce using rule 60 (cmpOp)


State 99

   56 cmpOp: NOTEQUALS .

    $default  reduce using rule 56 (cmpOp)


State 100

   47 cmpExp: arithExp cmpOp . arithExp

    AT          shift, and go to state 31
    CARAT       shift, and go to state 32
    CHARLIT     shift, and go to state 51
    DASH        shift, and go to state 52
    FALSE       shift, and go to state 53
    ID          shift, and go to state 16
    INTLITERAL  shift, and go to state 54
    LPAREN      shift, and go to state 55
    NULLPTR     shift, and go to state 57
    STRLITERAL  shift, and go to state 59
    TRUE        shift, and go to state 60

    fncall    go to state 61
    arithExp  go to state 118
    prodExp   go to state 68
    termExp   go to state 69
    term      go to state 70
    lval      go to state 86
    id        go to state 45


State 101

   49 arithExp: arithExp arithOp . prodExp

    AT          shift, and go to state 31
    CARAT       shift, and go to state 32
    CHARLIT     shift, and go to state 51
    DASH        shift, and go to state 52
    FALSE       shift, and go to state 53
    ID          shift, and go to state 16
    INTLITERAL  shift, and go to state 54
    LPAREN      shift, and go to state 55
    NULLPTR     shift, and go to state 57
    STRLITERAL  shift, and go to state 59
    TRUE        shift, and go to state 60

    fncall   go to state 61
    prodExp  go to state 119
    termExp  go to state 69
    term     go to state 70
    lval     go to state 86
    id       go to state 45


State 102

   64 prodOp: SLASH .

    $default  reduce using rule 64 (prodOp)


State 103

   63 prodOp: STAR .

    $default  reduce using rule 63 (prodOp)


State 104

   51 prodExp: prodExp prodOp . termExp

    AT          shift, and go to state 31
    CARAT       shift, and go to state 32
    CHARLIT     shift, and go to state 51
    DASH        shift, and go to state 52
    FALSE       shift, and go to state 53
    ID          shift, and go to state 16
    INTLITERAL  shift, and go to state 54
    LPAREN      shift, and go to state 55
    NULLPTR     shift, and go to state 57
    STRLITERAL  shift, and go to state 59
    TRUE        shift, and go to state 60

    fncall   go to state 61
    termExp  go to state 120
    term     go to state 70
    lval     go to state 86
    id       go to state 45


State 105

   28 stmt: TOCONSOLE exp SEMICOLON .

    $default  reduce using rule 28 (stmt)


State 106

   31 stmt: WHILE LPAREN exp . RPAREN LCURLY stmtList RCURLY

    RPAREN  shift, and go to state 121


State 107

   42 assignExp: lval ASSIGN exp .

    $default  reduce using rule 42 (assignExp)


State 108

   26 stmt: lval CROSSCROSS SEMICOLON .

    $default  reduce using rule 26 (stmt)


State 109

   25 stmt: lval DASHDASH SEMICOLON .

    $default  reduce using rule 25 (stmt)


State 110

   75 lval: id LBRACE exp . RBRACE

    RBRACE  shift, and go to state 122


State 111

   35 fncall: id LPAREN RPAREN .

    $default  reduce using rule 35 (fncall)


State 112

   36 fncall: id LPAREN actualsList . RPAREN
   38 actualsList: actualsList . COMMA exp

    COMMA   shift, and go to state 123
    RPAREN  shift, and go to state 124


State 113

   37 actualsList: exp .

    $default  reduce using rule 37 (actualsList)


State 114

   29 stmt: IF LPAREN exp RPAREN . LCURLY stmtList RCURLY
   30     | IF LPAREN exp RPAREN . LCURLY stmtList RCURLY ELSE LCURLY stmtList RCURLY

    LCURLY  shift, and go to state 125


State 115

   72 term: LPAREN exp RPAREN .

    $default  reduce using rule 72 (term)


State 116

   43 orExp: orExp OR andExp .
   45 andExp: andExp . AND cmpExp

    AND  shift, and go to state 91

    $default  reduce using rule 43 (orExp)


State 117

   45 andExp: andExp AND cmpExp .

    $default  reduce using rule 45 (andExp)


State 118

   47 cmpExp: arithExp cmpOp arithExp .
   49 arithExp: arithExp . arithOp prodExp

    CROSS  shift, and go to state 92
    DASH   shift, and go to state 93

    $default  reduce using rule 47 (cmpExp)

    arithOp  go to state 101


State 119

   49 arithExp: arithExp arithOp prodExp .
   51 prodExp: prodExp . prodOp termExp

    SLASH  shift, and go to state 102
    STAR   shift, and go to state 103

    $default  reduce using rule 49 (arithExp)

    prodOp  go to state 104


State 120

   51 prodExp: prodExp prodOp termExp .

    $default  reduce using rule 51 (prodExp)


State 121

   31 stmt: WHILE LPAREN exp RPAREN . LCURLY stmtList RCURLY

    LCURLY  shift, and go to state 126


State 122

   75 lval: id LBRACE exp RBRACE .

    $default  reduce using rule 75 (lval)


State 123

   38 actualsList: actualsList COMMA . exp

    AT          shift, and go to state 31
    CARAT       shift, and go to state 32
    CHARLIT     shift, and go to state 51
    DASH        shift, and go to state 52
    FALSE       shift, and go to state 53
    ID          shift, and go to state 16
    INTLITERAL  shift, and go to state 54
    LPAREN      shift, and go to state 55
    NOT         shift, and go to state 56
    NULLPTR     shift, and go to state 57
    STRLITERAL  shift, and go to state 59
    TRUE        shift, and go to state 60

    fncall     go to state 61
    exp        go to state 127
    assignExp  go to state 63
    orExp      go to state 64
    andExp     go to state 65
    cmpExp     go to state 66
    arithExp   go to state 67
    prodExp    go to state 68
    termExp    go to state 69
    term       go to state 70
    lval       go to state 71
    id         go to state 45


State 124

   36 fncall: id LPAREN actualsList RPAREN .

    $default  reduce using rule 36 (fncall)


State 125

   29 stmt: IF LPAREN exp RPAREN LCURLY . stmtList RCURLY
   30     | IF LPAREN exp RPAREN LCURLY . stmtList RCURLY ELSE LCURLY stmtList RCURLY

    $default  reduce using rule 22 (stmtList)

    stmtList  go to state 128


State 126

   31 stmt: WHILE LPAREN exp RPAREN LCURLY . stmtList RCURLY

    $default  reduce using rule 22 (stmtList)

    stmtList  go to state 129


State 127

   38 actualsList: actualsList COMMA exp .

    $default  reduce using rule 38 (actualsList)


State 128

   21 stmtList: stmtList . stmt
   29 stmt: IF LPAREN exp RPAREN LCURLY stmtList . RCURLY
   30     | IF LPAREN exp RPAREN LCURLY stmtList . RCURLY ELSE LCURLY stmtList RCURLY

    AT           shift, and go to state 31
    BOOL         shift, and go to state 4
    BOOLPTR      shift, and go to state 5
    CARAT        shift, and go to state 32
    CHAR         shift, and go to state 6
    CHARPTR      shift, and go to state 7
    FROMCONSOLE  shift, and go to state 33
    ID           shift, and go to state 16
    IF           shift, and go to state 34
    INT          shift, and go to state 8
    INTPTR       shift, and go to state 9
    RCURLY       shift, and go to state 130
    RETURN       shift, and go to state 36
    TOCONSOLE    shift, and go to state 37
    VOID         shift, and go to state 10
    WHILE        shift, and go to state 38

    varDecl    go to state 39
    type       go to state 40
    stmt       go to state 41
    fncall     go to state 42
    assignExp  go to state 43
    lval       go to state 44
    id         go to state 45


State 129

   21 stmtList: stmtList . stmt
   31 stmt: WHILE LPAREN exp RPAREN LCURLY stmtList . RCURLY

    AT           shift, and go to state 31
    BOOL         shift, and go to state 4
    BOOLPTR      shift, and go to state 5
    CARAT        shift, and go to state 32
    CHAR         shift, and go to state 6
    CHARPTR      shift, and go to state 7
    FROMCONSOLE  shift, and go to state 33
    ID           shift, and go to state 16
    IF           shift, and go to state 34
    INT          shift, and go to state 8
    INTPTR       shift, and go to state 9
    RCURLY       shift, and go to state 131
    RETURN       shift, and go to state 36
    TOCONSOLE    shift, and go to state 37
    VOID         shift, and go to state 10
    WHILE        shift, and go to state 38

    varDecl    go to state 39
    type       go to state 40
    stmt       go to state 41
    fncall     go to state 42
    assignExp  go to state 43
    lval       go to state 44
    id         go to state 45


State 130

   29 stmt: IF LPAREN exp RPAREN LCURLY stmtList RCURLY .
   30     | IF LPAREN exp RPAREN LCURLY stmtList RCURLY . ELSE LCURLY stmtList RCURLY

    ELSE  shift, and go to state 132

    $default  reduce using rule 29 (stmt)


State 131

   31 stmt: WHILE LPAREN exp RPAREN LCURLY stmtList RCURLY .

    $default  reduce using rule 31 (stmt)


State 132

   30 stmt: IF LPAREN exp RPAREN LCURLY stmtList RCURLY ELSE . LCURLY stmtList RCURLY

    LCURLY  shift, and go to state 133


State 133

   30 stmt: IF LPAREN exp RPAREN LCURLY stmtList RCURLY ELSE LCURLY . stmtList RCURLY

    $default  reduce using rule 22 (stmtList)

    stmtList  go to state 134


State 134

   21 stmtList: stmtList . stmt
   30 stmt: IF LPAREN exp RPAREN LCURLY stmtList RCURLY ELSE LCURLY stmtList . RCURLY

    AT           shift, and go to state 31
    BOOL         shift, and go to state 4
    BOOLPTR      shift, and go to state 5
    CARAT        shift, and go to state 32
    CHAR         shift, and go to state 6
    CHARPTR      shift, and go to state 7
    FROMCONSOLE  shift, and go to state 33
    ID           shift, and go to state 16
    IF           shift, and go to state 34
    INT          shift, and go to state 8
    INTPTR       shift, and go to state 9
    RCURLY       shift, and go to state 135
    RETURN       shift, and go to state 36
    TOCONSOLE    shift, and go to state 37
    VOID         shift, and go to state 10
    WHILE        shift, and go to state 38

    varDecl    go to state 39
    type       go to state 40
    stmt       go to state 41
    fncall     go to state 42
    assignExp  go to state 43
    lval       go to state 44
    id         go to state 45


State 135

   30 stmt: IF LPAREN exp RPAREN LCURLY stmtList RCURLY ELSE LCURLY stmtList RCURLY .

    $default  reduce using rule 30 (stmt)
